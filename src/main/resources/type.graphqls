type Match {
    score: Int!,
    minimumScore: Int!,
    goodScore: Int!,
    greatScore: Int!,
    matchId: String!
    leagueName: String!
    leagueId: Int!
    minutesOfMatch: String!
    home: Team!
    away: Team!
    betName: String!
    urlBet365: String
}

type Team {
    id: String!
    name: String!
    score: Int!
    redCard: Int
    cornerKick: Int
    attacks: Int
    dangerousAttack: Int
    shotOnGoal: Int
    shotOffGoal: Int
    ballPossession: String
    logo: String
}

type Bet {
    id: ID!
    name: String!
    minimumScore: Int!
    enabled: Boolean!,
    goodScore: Int!
    greatScore: Int!
    periodMatch: String!
    resultRequired: ResultRequired!
    equal: Boolean!
    corner: Boolean!
    minimumDashMinute: Int
    maximumDashMinute: Int
    maximumAdvantageInResult: Int!
    templateMessageTelegram: String!
    automaticSendTelegram: Boolean!
    rules: [BetRule]
}

input BetRequest {
    name: String!

}

type BetRule {
    id: ID!
    rule: Rule!
    value: Int!
    score: Int!
    ruleParentId: ID
    mandatory: Boolean!
    mandatoryAfterRedCard: Boolean!
    comparator: Comparator,
    teamType: TeamType
}

type Rule {
    id: ID!
    parentId: ID!
    type: String!
    name: String!
}

enum RuleType {
    ALERT, ANALYSIS, ANALYZABLE, ACQUIRE
}

enum Comparator {
    LESS, MORE, EQUAL
}

enum TeamType {
    FAVORITE, UNDERDOG, BOTH
}

enum ResultRequired {
    FAVORITE_WINNING, FAVORITE_TYING, FAVORITE_LOSING, FAVORITE_NOT_WINNING, FAVORITE_NOT_LOSING, FAVORITE_NOT_TYING
}
